Os arquivos desta aula são originados de "class_20231124_filesProfesor"


-------------------
Na sexta-feira dia 08/12 é para o desenvolvimento do trabalho; 
neste dia, não será cobrada presença mas o professor estará em sala para dúvidas; 
-------------------

Uma expressão lambda é a definição de uma função que não tem um nome; 
- lambda pode ter uma variável como parâmetro desta função e terá um corpo de função 
    \ x -> x + x
    - o corpo da expressão pode ter qualquer expressão válida para a linguagem 
        \ x -> Expr
    - para chamar a expressão, se coloca o lambda entre parêntesis e se coloca o valor de x depois
        (\ x -> x + x) 2
    - se a expressão lâmbda não tiver nenhum valor "chamado" ela, ela não causa efeito algum (não significa nada)
    - para poder avaliar uma função lambda, tem que passar uma expressão válida, como, por exemplo: 
        (\x -> x + 1)2 é 3
        - o primeiro passo para chegar a esse resultado é substituir as ocorrências de x pela expressão em avaliação; assim sendo, o primeiro passo desta avaliação é 2 + 1; se fosse (\x -> x + x)2 o resultado seria 4 e o primeiro passo seria 2 + 2 


======================

trabalho final 

- cada um escolhe a funcionalidade de alguma linguagem (tem que dizer qual vai ser na auça de 08 de dezembro)
- pode ser while, for, tupla, lista, for each, atribuição de variável; criar uma função com múltiplos parâmetros; 
- os operadores aritmeticos que tem que incluir é mais, menos, vezes
- boolean, and, or, 
- relacionais  é ==, <, >, >=, <=
- 4 ou 5 exemplos de teste
- entregar zip com os códigos e um link do vídeo (hospedar em qualquer lugar)